AWSTemplateFormatVersion: 2010-09-09

Description: Continuous deployment infrastructure for sample calculator application

Parameters:
  ModuleName:
    Description: The name of the module for this CodeBuild project.
    Type: String

Resources:
  CloudFormationTrustRole:
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - iam:CreateRole
            - iam:AttachRolePolicy
            - iam:PutRolePolicy
            - iam:PassRole
            - iam:DetachRolePolicy
            - iam:ListRolePolicies
            - iam:GetRole
            - iam:DeleteRolePolicy
            - iam:UpdateRoleDescription
            - iam:ListRoles
            - iam:DeleteRole
            - iam:GetRolePolicy
            - iam:CreateInstanceProfile
            - iam:AddRoleToInstanceProfile
            - iam:DeleteInstanceProfile
            - iam:GetInstanceProfile
            - iam:ListInstanceProfiles
            - iam:ListInstanceProfilesForRole
            - iam:RemoveRoleFromInstanceProfile
            Effect: Allow
            Resource:
            - !Sub "arn:aws:iam::*:role/${AWS::StackName}*"
            - !Sub "arn:aws:iam::*:instance-profile/${AWS::StackName}*"
          - Action:
            - ssm:GetParameters
            - autoscaling:*
            - ec2:*
            - codedeploy:*
            - elasticloadbalancing:*
            Effect: Allow
            Resource: '*'
        PolicyName: !Join
          - '-'
          -  - !Ref 'AWS::StackName'
             - CloudFormationRolePolicy
      RoleName: !Join
        - '-'
        -  - !Ref 'AWS::StackName'
           - CloudFormation
    Type: AWS::IAM::Role

  CodeBuildPolicy:
    Description: Setting IAM policy for service role for CodeBuild
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: '*'
        - Action:
          - s3:PutObject
          - s3:GetObject
          - s3:GetObjectVersion
          Effect: Allow
          Resource:
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'CacheBucket'
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'CacheBucket'
              - /*
        - Action:
          - ecr:BatchCheckLayerAvailability
          - ecr:CompleteLayerUpload
          - ecr:GetAuthorizationToken
          - ecr:InitiateLayerUpload
          - ecr:PutImage
          - ecr:UploadLayerPart
          Effect: Allow
          Resource: "*"
        - Action:
          - kms:GenerateDataKey*
          - kms:Encrypt
          - kms:Decrypt
          Effect: Allow
          Resource:
          - !Join
            - ':'
            - - arn:aws:kms
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - !Join
                - /
                - - alias
                  - aws/s3
      PolicyName: !Join
        - '-'
        -  - !Ref 'AWS::StackName'
           - CodeBuildPolicy
      Roles:
      - !Ref 'CodeBuildRole'
    Type: AWS::IAM::Policy

  ECR:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: !Join
        - 'ecr-'
        - - !Ref ModuleName

  CodeBuildProject:
    DependsOn:
    - CodeBuildPolicy
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Location: !Ref 'CacheBucket'
        Type: S3
      Description: !Join
        - ''
        - - 'CodeBuild Project for '
          - !Ref 'ModuleName'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:18.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: IMAGE_REPO 
            Type: PLAINTEXT
            Value: !Join
            - ''
            - - !Ref 'AWS::AccountId'
              - .dkr.ecr.eu-west-1.amazonaws.com
          - Name: IMAGE_NAME
            Type: PLAINTEXT
            Value: !Ref ModuleName
      Name: !Ref ModuleName
      ServiceRole: !Ref 'CodeBuildRole'
      Source:
        Type: GITHUB
        Auth:
            Type: OAUTH
            Resource: 'f4d942a6e47da755ae540f5226159736456db7c9'
        Location: !Join
          - ''
          - - https://github.com/bootifulmicropizza/
            - !Ref ModuleName
        ReportBuildStatus: true
      Triggers:
        Webhook: true
      BadgeEnabled: true
    Type: AWS::CodeBuild::Project

  CodeBuildRole:
    Description: Creating service role in IAM for Amazon EC2 instances
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      RoleName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - CodeBuild
    Type: AWS::IAM::Role

  CacheBucket:
    DeletionPolicy: Delete
    Description: Creating Amazon S3 bucket for CodeBuild caching
    Properties:
      Tags:
      - Key: Name
        Value: CodeBuildM2Cache
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
    Type: AWS::S3::Bucket
